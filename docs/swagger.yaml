basePath: /v1
definitions:
  api.HTTPErrorResponse:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: internal server error
        type: string
    type: object
  api.logInForm:
    properties:
      email:
        example: hthnam203@gmail.com
        type: string
      password:
        example: "123123123"
        maxLength: 72
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.signUpForm:
    properties:
      email:
        example: hthnam203@gmail.com
        type: string
      password:
        example: "123123123"
        maxLength: 72
        minLength: 8
        type: string
      username:
        example: sen1or
        maxLength: 50
        minLength: 6
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8000
info:
  contact:
    email: hthnam203@gmail.com
    name: Nam Huynh
  description: The server API
  title: Let's Live API
  version: "0.1"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: User credentials
        in: body
        name: userCredentials
        required: true
        schema:
          $ref: '#/definitions/api.logInForm'
      responses:
        "204":
          description: No Content
          headers:
            accessToken:
              description: Access Token
              type: string
            refreshToken:
              description: Refresh Token
              type: string
        "400":
          description: Invalid body
          schema:
            type: string
        "401":
          description: Username or password is not correct
          schema:
            type: string
      summary: Log in a user
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      description: |-
        Register a new user with username, email, and password
        On success, redirect user to index page and set refresh and access token in cookie
      parameters:
      - description: User registration data
        in: body
        name: userForm
        required: true
        schema:
          $ref: '#/definitions/api.signUpForm'
      responses:
        "204":
          description: No Content
          headers:
            accessToken:
              description: Access Token
              type: string
            refreshToken:
              description: Refresh Token
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.HTTPErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.HTTPErrorResponse'
      summary: Sign up a new user
      tags:
      - Authentication
  /auth/verify:
    get:
      consumes:
      - application/json
      description: Verifies a user's email address with the provided token
      parameters:
      - description: Email verification token
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Return a Email verification complete! string
          schema:
            type: string
        "400":
          description: Verify token expired or invalid.
          schema:
            type: string
        "500":
          description: An error occurred while verifying the user.
          schema:
            type: string
      summary: Verify user email
      tags:
      - Authentication
swagger: "2.0"
